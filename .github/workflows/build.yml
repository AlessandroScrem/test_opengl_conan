name: Build

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
          
            CONAN-INSTALL_: 'conan install .. -s compiler.libcxx=libstdc++11'
            CMAKE_CONFIG_:  'cmake .. -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release'
            CMAKE_BUILD_:   'cmake --build .'
            
          - os:  macos-latest
          
            CONAN-INSTALL_: 'conan install .. --build=missing -s compiler.libcxx=libstdc++'
            CMAKE_CONFIG_:  'cmake .. -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release'
            CMAKE_BUILD_:   'cmake --build .'

          - os: windows-latest
          
            CONAN-INSTALL_: 'conan install ..'
            CMAKE_CONFIG_:  'cmake .. -G "Visual Studio 16 2019"'
            CMAKE_BUILD_:   'cmake --build . --config Release'

    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2

    - name: Setup python 
      uses: actions/setup-python@v2
    
    - name: Setup conan 
      run: |
        python -m venv venv
        source venv/bin/activate
        pip3 install wheel setuptools
        pip3 install conan --upgrade
        mkdir build
        cd build
        ${{matrix.CONAN-INSTALL_}}
 
    - name: Configure
      run: |
        cd build
        ${{matrix.CMAKE_CONFIG_}}
        
    - name: Build
      run: |
        cd build
        ${{matrix.CMAKE_BUILD_}}
